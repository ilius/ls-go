package application

import (
	"encoding/json"
	"fmt"

	. "github.com/ilius/ls-go/lscolors"
)

// Reset undoes ANSI color codes
const Reset = "\x1b[0m"

func printColorsJson() {
	b, err := json.Marshal(colors)
	if err != nil {
		panic(err)
	}
	fmt.Println(string(b))
}

var colors = Colors{
	File: map[string]LightDark{
		"as":      {Fg(196), Fg(124)},
		"asm":     {Fg(223), Fg(215)},
		"bf":      {Fg(223), Fg(215)},
		"c":       {Fg(39), Fg(27)},
		"clj":     {Fg(204), Fg(162)},
		"coffee":  {Fg(136), Fg(94)},
		"cr":      {Fg(82), Fg(70)},
		"cson":    {Fg(136), Fg(94)},
		"css":     {Fg(219), Fg(207)},
		"dart":    {Fg(43), Fg(31)},
		"diff":    {Fg(10), Fg(9)},
		"elm":     {Fg(51), Fg(39)},
		"erl":     {Fg(161), Fg(89)},
		"ex":      {Fg(99), Fg(57)},
		"f":       {Fg(208), Fg(94)},
		"fs":      {Fg(45), Fg(32)},
		"gb":      {Fg(43), Fg(29)},
		"go":      {Fg(121), Fg(109)},
		"graphql": {Fg(219), Fg(207)},
		"groovy":  {Fg(223), Fg(215)},
		"gv":      {Fg(141), Fg(99)},
		"hs":      {Fg(99), Fg(57)},
		"html":    {Fg(87), Fg(73)},
		"ino":     {Fg(43), Fg(29)},
		"java":    {Fg(136), Fg(94)},
		"jl":      {Fg(141), Fg(99)},
		"js":      {Fg(184), Fg(100)},
		"jsx":     {Fg(87), Fg(73)},
		"kt":      {Fg(99), Fg(57)},
		"lock":    {FgGray(8), FgGray(5)},
		"log":     {FgGray(8), FgGray(5)},
		"lua":     {Fg(39), Fg(27)},
		"m":       {Fg(208), Fg(196)},
		"md":      {Fg(87), Fg(73)},
		"ml":      {Fg(208), Fg(94)},
		"nim":     {Fg(184), Fg(100)},
		"php":     {Fg(30), Fg(22)},
		"pl":      {Fg(99), Fg(57)},
		"py":      {Fg(34), Fg(28)},
		"r":       {Fg(51), Fg(39)},
		"rb":      {Fg(202), Fg(131)},
		"rs":      {Fg(208), Fg(94)},
		"scala":   {Fg(196), Fg(124)},
		"sh":      {Fg(164), Fg(90)},
		"sol":     {Fg(39), Fg(27)},
		"sql":     {Fg(193), Fg(148)},
		"svelte":  {Fg(208), Fg(196)},
		"swift":   {Fg(223), Fg(215)},
		"vim":     {Fg(34), Fg(28)},
		"vue":     {Fg(43), Fg(29)},
		"xml":     {Fg(87), Fg(73)},
		"zig":     {Fg(184), Fg(100)},
		"run":     {Fg(1), Fg(1)},
		"exe":     {Fg(1), Fg(1)},

		"sharedlib": {Fg(206), Fg(163)},

		"compiled": {FgGray(8), FgGray(5)},
		"compress": {Fg(196), Fg(124)},
		"document": {Fg(196), Fg(124)},
		"media":    {Fg(141), Fg(99)},
		DEFAULT:    {FgGray(23), FgGray(12)},
	},
	Size: map[string]*Style{
		"B": Fg(27),
		"K": Fg(33),
		"M": Fg(81),
		"G": Fg(123),
		"T": Fg(159),
	},
	Time: TimeColors{
		Year:        Fg(3),
		Number:      Fg(2),
		NumberColon: Fg(10),
		NumberSlash: Fg(249),
		Word:        Fg(4),
	},
	Dir: DirColors{
		Name:       &Style{Fg: Gray(23), Bg: 18, Bold: true},
		Ext:        Fg(105),
		HiddenName: &Style{Fg: Gray(23), Bg: 17, Bold: true},
		HiddenExt:  Fg(105),
	},
	Tabular: &TabularColors{
		FolderHeader: FolderHeaderColors{
			Arrow:      Fg(136),
			Main:       BgGray(2).SetFg(136),
			Slash:      FgGray(5),
			LastFolder: Fg(226).SetBold(),
			Error:      Bg(196).SetFg(226),
		},
		TableHeader: Fg(4),
	},
	Html: &HtmlColors{
		Default: Bg(Gray(1)).SetFg(15),
		FolderHeader: FolderHeaderColors{
			Arrow:      Fg(136),
			Main:       BgGray(2).SetFg(136),
			Slash:      FgGray(5),
			LastFolder: Fg(226).SetBold(),
			Error:      Bg(196).SetFg(226),
		},
		TableHeader: Fg(4),
	},
	Link: LinkColors{
		Name:    Fg(46).SetBold(),
		NameDir: &Style{Bg: 18, Fg: 51, Bold: true},
		Arrow:   Fg(53),
		Path:    Fg(164),
		Broken:  Fg(196),
	},
	Device: &Style{Bg: Gray(3), Fg: 220, Bold: true},
	Socket: &Style{Fg: 15, Bg: 53, Bold: true},
	Pipe:   &Style{Fg: 15, Bg: 94, Bold: true},
	Stats: StatsColors{
		Text:   &Style{Bg: Gray(2), Fg: Gray(15)},
		Number: Fg(24),
		MS:     Fg(39),
	},
	Perm: PermColors{
		User: map[string]*Style{
			rootUserName: Fg(198),
			"daemon":     Fg(173),
			SELF:         Fg(40),
			DEFAULT:      Fg(37),
		},
		Group: map[string]*Style{
			"wheel": Fg(124),
			"staff": Fg(28),
			"admin": Fg(100),
			DEFAULT: Fg(90),
		},
		Other: map[string]*Style{
			DEFAULT: {Bg: Gray(2), Fg: Gray(15)},
		},
	},
	Expr: ExprColors{
		String:  &Style{},
		Integer: Fg(27),
		Float:   Fg(207),
		Time:    Fg(11),
	},
}

var FileAliases = map[string]string{
	"s":    "asm",
	"b":    "bf",
	"c++":  "c",
	"cc":   "c",
	"cpp":  "c",
	"cs":   "c",
	"cxx":  "c",
	"d":    "c",
	"h":    "c",
	"h++":  "c",
	"hh":   "c",
	"hpp":  "c",
	"hxx":  "c",
	"pxd":  "c",
	"cljc": "clj",
	"cljs": "clj",

	"class": "compiled",
	"elc":   "compiled",
	"hi":    "compiled",
	"o":     "compiled",
	"pyc":   "compiled",

	"so":  "sharedlib",
	"bin": "sharedlib",
	"dll": "sharedlib",

	"7z":       "compress",
	"Z":        "compress",
	"bz2":      "compress",
	"deb":      "compress",
	"dmg":      "compress",
	"dpkg":     "compress",
	"gz":       "compress",
	"iso":      "compress",
	"jar":      "compress",
	"lzma":     "compress",
	"par":      "compress",
	"rar":      "compress",
	"rpm":      "compress",
	"tar":      "compress",
	"tc":       "compress",
	"tgz":      "compress",
	"txz":      "compress",
	"whl":      "compress",
	"xz":       "compress",
	"z":        "compress",
	"zip":      "compress",
	"less":     "css",
	"sass":     "css",
	"scss":     "css",
	"styl":     "css",
	"djvu":     "document",
	"doc":      "document",
	"docx":     "document",
	"dvi":      "document",
	"eml":      "document",
	"fotd":     "document",
	"odp":      "document",
	"odt":      "document",
	"pdf":      "document",
	"ppt":      "document",
	"pptx":     "document",
	"rtf":      "document",
	"xls":      "document",
	"xlsx":     "document",
	"f03":      "f",
	"f77":      "f",
	"f90":      "f",
	"f95":      "f",
	"for":      "f",
	"fpp":      "f",
	"ftn":      "f",
	"fsi":      "fs",
	"fsscript": "fs",
	"fsx":      "fs",
	"dna":      "gb",
	"gsh":      "groovy",
	"gvy":      "groovy",
	"gy":       "groovy",
	"htm":      "html",
	"xhtml":    "html",
	"bson":     "js",
	"json":     "js",
	"mjs":      "js",
	"ts":       "js",
	"tsx":      "jsx",
	"cjsx":     "jsx",
	"mat":      "m",
	"markdown": "md",
	"mkd":      "md",
	"rst":      "md",
	"sml":      "ml",
	"mli":      "ml",
	"aac":      "media",
	"alac":     "media",
	"audio":    "media",
	"avi":      "media",
	"bmp":      "media",
	"cbr":      "media",
	"cbz":      "media",
	"eps":      "media",
	"flac":     "media",
	"flv":      "media",
	"gif":      "media",
	"ico":      "media",
	"image":    "media",
	"jpeg":     "media",
	"jpg":      "media",
	"m2v":      "media",
	"m4a":      "media",
	"mka":      "media",
	"mkv":      "media",
	"mov":      "media",
	"mp3":      "media",
	"mp4":      "media",
	"mpeg":     "media",
	"mpg":      "media",
	"nef":      "media",
	"ogg":      "media",
	"ogm":      "media",
	"ogv":      "media",
	"opus":     "media",
	"orf":      "media",
	"pbm":      "media",
	"pgm":      "media",
	"png":      "media",
	"pnm":      "media",
	"ppm":      "media",
	"pxm":      "media",
	"stl":      "media",
	"svg":      "media",
	"tif":      "media",
	"tiff":     "media",
	"video":    "media",
	"vob":      "media",
	"wav":      "media",
	"webm":     "media",
	"webp":     "media",
	"wma":      "media",
	"wmv":      "media",
	"xpm":      "media",
	"php3":     "php",
	"php4":     "php",
	"php5":     "php",
	"phpt":     "php",
	"phtml":    "php",
	"ipynb":    "py",
	"pickle":   "py",
	"pkl":      "py",
	"pyx":      "py",
	"bash":     "sh",
	"csh":      "sh",
	"fish":     "sh",
	"ksh":      "sh",
	"zsh":      "sh",
	"plpgsql":  "sql",
	"plsql":    "sql",
	"psql":     "sql",
	"tsql":     "sql",
	"vimrc":    "vim",
}

func init() {
	uc := colors.Perm.User
	for _, username := range platform.SystemUserNames() {
		if uc[username] == nil {
			uc[username] = Fg(11)
		}
	}
}
